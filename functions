#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE  ]] && set -x

APP="$2"
PSQL_ROOT="$DOKKU_ROOT/.psql-sc"
PSQL_IMAGE="postgres:9.3"
PSQL_CONTAINER_NAME="psql-single-container"

check_already_exists() {
  [[ -f "$PSQL_ROOT/db_$APP" ]] && echo "Database for $APP already exists" && exit 1
}

check_exists() {
  [[ ! -f "$PSQL_ROOT/db_$APP" ]] && echo "No database configured for $APP" && exit 1
}

check_app() {
  [[ -z "$APP" ]] && echo "Please specify an app to run the command on" && exit 1
}

check_container() {
  [[ -z "$PSQL_ID" ]] && echo "Postgresql container not started. Start with dokku psql:start" && exit 1
}

load_ip_and_container() {
  PSQL_ID=$(docker ps -f status=running | grep "$PSQL_CONTAINER_NAME" | awk '{print $1}') || true
  if [[ -n "$PSQL_ID" ]]; then
    PRIVATE_IP=$(docker inspect "$PSQL_ID" | grep IPAddress | awk '{ print $2 }' | tr -d ',"')
    PORT=5432
  fi
}

db_url() {
  local APP="$1"
  local DATABASE=$(cat "$PSQL_ROOT/db_$APP")
  local PASSWORD=$(cat "$PSQL_ROOT/pass_$APP")
  echo "postgresql://${DATABASE}:${PASSWORD}@${PRIVATE_IP}:${PORT}/${DATABASE}"
}

database_name() {
  echo "$1" | tr .- _
}

env_for() {
  local APP="$1"
  if [[ -f "$PSQL_ROOT/db_$APP" ]] && [[ -f "$PSQL_ROOT/pass_$APP" ]]; then
    local URL=$(db_url "$APP")
    local DATABASE=$(cat "$PSQL_ROOT/db_$APP")
    local PASSWORD=$(cat "$PSQL_ROOT/pass_$APP")
    echo "DATABASE_URL=$URL POSTGRESQL_URL=$URL DB_TYPE=postgresql DB_HOST=$PRIVATE_IP DB_PORT=$PORT DB_NAME=$DATABASE DB_USER=$DATABASE DB_PASS=$PASSWORD"
  fi
}

restart_apps() {
  load_ip_and_container
  for APP_NAME in $(find "$PSQL_ROOT/"* -maxdepth 0 -name 'db*' -printf '%f\n' | sed 's/.*db_//'); do
    set_env_for "$APP_NAME"
    dokku_log_info2 "Restarting application: $APP_NAME"
    dokku ps:restart "$APP_NAME"
  done
}

set_env_for() {
  local APP="$1"
  dokku_log_info1 "Setting config vars for $APP"
  dokku config:set-norestart "$APP" $(env_for "$APP") &> /dev/null
}
